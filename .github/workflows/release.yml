on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: install rice
        run: | 
          go get github.com/GeertJohan/go.rice
          go get github.com/GeertJohan/go.rice/rice
      - name: Cross Platform Build
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make cross
      - name: Test
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make test 
      - name: Upload Linux
        uses: actions/upload-artifact@v1
        with:
          name: "gopogh-linux-amd64"
          path: ./out/gopogh-linux-amd64
      - name: Upload Darwin
        uses: actions/upload-artifact@v1
        with:
          name: "gopogh-darwin-amd64"
          path: ./out/gopogh-darwin-amd64
      - name: Upload windows
        uses: actions/upload-artifact@v1
        with:
          name: "gopogh.exe"
          path: ./out/gopogh.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Install on Linux

            ```
              curl -LO https://github.com/medyagh/gopogh/releases/download/${{ github.ref }}/gopogh-darwin-amd64 && sudo install gopogh-darwin-amd64 /usr/local/bin/gopogh
            ```

            ## Install on MacOS
            ```
            curl -LO https://github.com/medyagh/gopogh/releases/download/${{ github.ref }}/gopogh-linux-amd64 && sudo install gopogh-linux-amd64 /usr/local/bin/gopogh
            ```

            ## Windows

            https://github.com/medyagh/gopogh/releases/download/${{ github.ref }}/gopogh.exe
          draft: false
          prerelease: false
      - name : upload linux assets
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./out/gopogh-linux-amd64
          asset_name: gopogh-linux-amd64
          asset_content_type: application/octet-stream
      - name : upload mac assets
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./out/gopogh-darwin-amd64
          asset_name: gopogh-darwin-amd64
          asset_content_type: application/octet-stream
      - name : upload windows assets
        id: upload-release-asset-winodw
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./out/gopogh.exe
          asset_name: gopogh.exe
          asset_content_type: application/octet-stream
      - name: Publish to Docker Repository
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: medyagh/gopogh
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tag_names: true

